% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjust-equivocal-zone.R
\name{adjust_equivocal_zone}
\alias{adjust_equivocal_zone}
\title{Apply an equivocal zone to a binary classification model.}
\usage{
adjust_equivocal_zone(x, value = 0.1, threshold = 1/2)
}
\arguments{
\item{x}{A \code{\link[=tailor]{tailor()}}.}

\item{value}{A numeric value (between zero and 1/2) or \code{\link[hardhat:tune]{hardhat::tune()}}. The
value is the size of the buffer around the threshold.}

\item{threshold}{A numeric value (between zero and one) or \code{\link[hardhat:tune]{hardhat::tune()}}.}
}
\description{
Equivocal zones describe intervals of predicted probabilities that are deemed
too uncertain or ambiguous to be assigned a hard class. Rather than
predicting a hard class when the probability is very close to a threshold,
tailors using this adjustment predict "[EQ]".
}
\section{Data Usage}{

This adjustment doesn't require estimation and, as such, the same data that's
used to train it with \code{fit()} can be predicted on with \code{predict()}; fitting
this adjustment just collects metadata on the supplied column names and does
not risk data leakage.
}

\examples{
\dontshow{if (rlang::is_installed(c("probably", "modeldata"))) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
library(dplyr)
library(modeldata)

head(two_class_example)

# `predicted` gives hard class predictions based on probabilities
two_class_example \%>\% count(predicted)

# when probabilities are within (.25, .75), consider them equivocal
tlr <-
  tailor() \%>\%
  adjust_equivocal_zone(value = 1 / 4)

tlr

# fit by supplying column names. situate in a modeling workflow
# with `workflows::add_tailor()` to avoid having to do so manually
tlr_fit <- fit(
  tlr,
  two_class_example,
  outcome = c(truth),
  estimate = c(predicted),
  probabilities = c(Class1, Class2)
)

tlr_fit

# adjust hard class predictions
predict(tlr_fit, two_class_example) \%>\% count(predicted)
\dontshow{\}) # examplesIf}
}
