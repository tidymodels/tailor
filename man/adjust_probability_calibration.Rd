% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjust-probability-calibration.R
\name{adjust_probability_calibration}
\alias{adjust_probability_calibration}
\title{Re-calibrate classification probability predictions}
\usage{
adjust_probability_calibration(x, method = NULL, ...)
}
\arguments{
\item{x}{A \code{\link[=tailor]{tailor()}}.}

\item{method}{Character. One of \code{"logistic"}, \code{"multinomial"},
\code{"beta"}, \code{"isotonic"}, or \code{"isotonic_boot"}, corresponding to the
function from the \pkg{probably} package \code{probably::cal_estimate_logistic()},
\code{probably::cal_estimate_multinomial()}, etc., respectively.}

\item{...}{Optional arguments to pass to the corresponding function in the
\pkg{probably} package. These arguments must be named.}
}
\description{
Calibration is the process of adjusting a model's outputted probabilities
to match the observed frequencies of events. This technique aims to
ensure that when a model predicts a certain probability for an outcome,
that probability accurately reflects the true likelihood of that outcome
occurring.
}
\section{Data Usage}{

This adjustment requires estimation and, as such, different subsets of data
should be used to train it and evaluate its predictions. See the section
by the same name in \code{?workflows::add_tailor()} for more information on
preventing data leakage with postprocessors that require estimation. When
situated in a workflow, tailors will automatically be estimated with
appropriate subsets of data.
}

\examples{
\dontshow{if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
library(modeldata)

# split example data
set.seed(1)
in_rows <- sample(c(TRUE, FALSE), nrow(two_class_example), replace = TRUE)
d_calibration <- two_class_example[in_rows, ]
d_test <- two_class_example[!in_rows, ]

head(d_calibration)

# specify calibration
tlr <-
  tailor() |>
  adjust_probability_calibration(method = "logistic")

# train tailor on a subset of data. situate in a modeling workflow with
# `workflows::add_tailor()` to avoid having to specify column names manually
tlr_fit <- fit(
  tlr,
  d_calibration,
  outcome = c(truth),
  estimate = c(predicted),
  probabilities = c(Class1, Class2)
)

# apply to predictions on another subset of data
head(d_test)

predict(tlr_fit, d_test)
\dontshow{\}) # examplesIf}
}
